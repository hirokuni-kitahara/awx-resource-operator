---

- name: Read K8s job info
  k8s_info:
    kind: Job
    api_version: batch/v1
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
  register: k8s_job

- block:
    - name: Update AnsibleJob status with message
      k8s_status:
        api_version: tower.ansible.com/v1alpha1
        kind: AnsibleJob
        name: "{{ ansible_operator_meta.name }}"
        namespace: "{{ ansible_operator_meta.namespace }}"
        status:
          message: "This job instance is already running or has reached its end state."
    - name: End play early
      meta: end_play
  when: k8s_job["resources"] is defined and (k8s_job["resources"]|length>0)

- name: Read Secret Configuration
  k8s_info:
    kind: Secret
    api_version: v1
    name: "{{ tower_auth_secret }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
  register: tower_config_secret

- name: Validate Secret Exists
  assert:
    that:
      - tower_config_secret["resources"] is defined and (tower_config_secret["resources"]|length>0)
    fail_msg: "Tower Secret must exist"


- name: Set default validation result
  set_fact:
    validation_result: "failure"

- name: Validate playbook
  include_role:
    name: playbookvalidator
    public: yes

- block:
    - name: Update AnsibleJob status with validation result
      k8s_status:
        api_version: tower.ansible.com/v1alpha1
        kind: AnsibleJob
        name: "{{ ansible_operator_meta.name }}"
        namespace: "{{ ansible_operator_meta.namespace }}"
        status:
          message: "Failed to validate the playbook"
    - name: End play due to validation failure
      meta: end_play
  when: validation_result == "failure"

- name: Set user provided runner image
  set_fact:
    _custom_runner_image: "{{ runner_image }}:{{ runner_version }}"
  when:
    - runner_image is defined
    - runner_version is defined

- name: Set Runner image URL
  set_fact:
    _runner_image: "{{ _custom_runner_image | default(lookup('env', 'RELATED_IMAGE_ANSIBLE_JOB_RUNNER_IMAGE')) }}"

- name: Start K8s Runner Job
  k8s:
    state: present
    definition: "{{ lookup('template', 'job_definition.yml') }}"

- name: Update AnsibleJob status with K8s job info
  k8s_status:
    api_version: tower.ansible.com/v1alpha1
    kind: AnsibleJob
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      k8sJob:
        created: true
        message: |-
          Monitor the job.batch status for more details with the following commands:
          'kubectl -n {{ ansible_operator_meta.namespace }} get job.batch/{{ ansible_operator_meta.name }}'
          'kubectl -n {{ ansible_operator_meta.namespace }} describe job.batch/{{ ansible_operator_meta.name }}'
          'kubectl -n {{ ansible_operator_meta.namespace }} logs -f job.batch/{{ ansible_operator_meta.name }}'
        namespacedName: "{{ ansible_operator_meta.namespace+'/'+ansible_operator_meta.name }}"
        env:
          inventory: "{{ inventory | default(omit) }}"
          secretNamespacedName: "{{ ansible_operator_meta.namespace+'/'+tower_auth_secret }}"
          templateName: "{{ job_template_name }}"
          verifySSL: false
